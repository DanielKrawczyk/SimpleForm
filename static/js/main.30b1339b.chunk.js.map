{"version":3,"sources":["components/validations.jsx","components/Form.jsx","components/Loading.jsx","components/Info.jsx","store/store.js","store/data.js","store/info.js","App.js","index.js"],"names":["get","id","document","getElementById","Form","useState","step","setStep","store","useSelector","state","data","dispatch","useDispatch","emoji","post","a","preparation_time","window","confirm","classList","remove","fetch","method","headers","body","JSON","stringify","res","json","console","log","add","showInfo","msg","type","setTimeout","className","htmlFor","placeholder","pattern","title","onChange","el","x","target","validity","patternMismatch","value","length","defaultValue","name","e","disabled","min","max","parseInt","parseFloat","showProperInputs","onClick","postData","prep","slices","diameter","no_of_slices","spicy","spiciness_scale","bread","slices_of_bread","validate","Loading","xmlns","width","height","fill","viewBox","d","Info","info","connect","combineReducers","action","createStore","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.30b1339b.chunk.js","sourcesContent":["function get(id) {\r\n    return document.getElementById(id);\r\n}\r\n\r\n// I want to make 100% sure nothing bad is gonna happen\r\n\r\nexport default function validate() {\r\n    const name = get('name'),\r\n    prep = get('prep'),\r\n    type = get('type');\r\n\r\n    if (name.value.length < 6) {\r\n        name.classList.add('is-invalid');\r\n        return false;\r\n    } else {\r\n        name.classList.remove('is-invalid');\r\n    }\r\n\r\n    if (prep.value.length !== 8) {\r\n        prep.classList.add('is-invalid');\r\n        return false;\r\n    } else {\r\n        prep.classList.remove('is-invalid');\r\n    }\r\n\r\n    if (type.value === 'info') {\r\n        type.classList.add('is-invalid');\r\n        return false;\r\n    } else {\r\n        type.classList.remove('is-invalid');\r\n    }\r\n\r\n    let post = {\r\n        name: name.value,\r\n        preparation_time: prep.value,\r\n        type: type.value\r\n    }\r\n\r\n    switch(type.value) {\r\n        case 'pizza':\r\n            const slices = get('slices'),\r\n            diameter = get('diameter');\r\n\r\n            if (slices.value < 4 || slices.value > 16) {\r\n                slices.classList.add('is-invalid');\r\n                return false;\r\n            } else {\r\n                slices.classList.remove('is-invalid');\r\n            }\r\n\r\n            if (diameter.value < 25 || diameter.value > 60) {\r\n                diameter.classList.add('is-invalid');\r\n                return false;\r\n            } else {\r\n                diameter.classList.remove('is-invalid');\r\n            }\r\n\r\n            post = {\r\n                ...post,\r\n                no_of_slices: parseInt(slices.value),\r\n                diameter: parseFloat(diameter.value)\r\n            }\r\n\r\n            break;\r\n        case 'soup':\r\n            const spicy = get('spiciness');\r\n\r\n            if /* It's range input, but if somehow */ (spicy.value < 1 || spicy.value > 10) {\r\n                spicy.classList.add('is-invalid');\r\n                return false;\r\n            } else {\r\n                spicy.classList.remove('is-invalid');\r\n            }\r\n\r\n            post = {\r\n                ...post,\r\n                spiciness_scale: parseInt(spicy.value)\r\n            }\r\n\r\n            break;\r\n        case 'sandwich':\r\n            const bread = get('bread');\r\n\r\n            if (bread.value < 1 || bread.value > 12) {\r\n                bread.classList.add('is-invalid');\r\n                return false;\r\n            } else {\r\n                bread.classList.remove('is-invalid');\r\n            }\r\n\r\n            post = {\r\n                ...post,\r\n                slices_of_bread: parseInt(bread.value)\r\n            }\r\n\r\n            break;\r\n        default: \r\n            return false;\r\n    }\r\n\r\n    return post;\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport validate from './validations';\r\n\r\nfunction Form() {\r\n    const [ step, setStep ] = useState(1),\r\n    store = useSelector(state => state.data),\r\n    dispatch = useDispatch();\r\n\r\n    // Emoji for spiciness scale\r\n    const emoji = [\r\n        <p>&#128519;</p>, // Not spicy\r\n        <p>&#128526;</p>,\r\n        <p>&#128523;</p>,\r\n        <p>&#128527;</p>,\r\n        <p>&#128528;</p>,\r\n        <p>&#128556;</p>, // Medium spicy\r\n        <p>&#128547;</p>,\r\n        <p>&#128548;</p>,\r\n        <p>&#128520;</p>,\r\n        <p>&#128293;</p> // Very spicy\r\n    ]\r\n\r\n    // POSTing data using fetch method\r\n    async function postData(post) {\r\n        if (post === false) return; // If any input is invalid\r\n        \r\n        if (post.preparation_time === '00:00:00') {\r\n            const confirm = window.confirm('It looks like the preparation time of your dish is immediately! Are you sure it\\'s proper value?');\r\n\r\n            if (!confirm) return;\r\n        }\r\n\r\n        document.getElementById('loading').classList.remove('hidden');\r\n\r\n        try {\r\n            const res = await fetch('https://frosty-wood-6558.getsandbox.com/dishes', {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Accept\":\"application/json\",\r\n                    \"Content-Type\":\"application/json\"\r\n                },\r\n                body: JSON.stringify(post)\r\n            })\r\n            const data = res.json();\r\n            console.log(data);\r\n            document.getElementById('loading').classList.add('hidden');\r\n\r\n            showInfo('New dish added succesfully!');\r\n\r\n        } catch (error) {\r\n            document.getElementById('loading').classList.add('hidden');\r\n            showInfo(`Connection error: ${error}`)\r\n        }\r\n    }\r\n\r\n    // Show positive or negative info\r\n    function showInfo(msg) {\r\n        dispatch({\r\n            type: 'NEW_INFO',\r\n            data: msg\r\n        })\r\n\r\n        document.getElementById('info').classList.add('show');\r\n\r\n        setTimeout(() => {\r\n            document.getElementById('info').classList.remove('show');\r\n        }, 5000)\r\n    }\r\n\r\n    // Show proper input after choosing type of dish\r\n    function showProperInputs() {\r\n        switch (store.type) {\r\n            case 'pizza':\r\n                return (\r\n                    <div className=\"input-group mt-2\">\r\n                        <label className=\"input-group-text\" htmlFor=\"slices\">&#127829; Number of slices and diameter:</label>\r\n                        <input className=\"form-control\" type=\"number\" id=\"slices\" min=\"4\" max=\"16\" placeholder=\"Min 4 slices...\" title=\"Min 4 slices, max 16 slices.\" onChange={el => {\r\n                            const x = el.target;\r\n                            if (parseInt(x.value) < 4 || parseInt(x.value) > 16) {\r\n                                x.classList.add('is-invalid')\r\n                            } else {\r\n                                x.classList.remove('is-invalid')\r\n                            }\r\n                        }} />\r\n                        <input className=\"form-control\" type=\"number\" id=\"diameter\" min=\"25\" max=\"60\" step=\"0.1\" placeholder=\"Min 25 cm...\" title=\"Min 25 cm, max 60 cm.\" onChange={el => {\r\n                            const x = el.target;\r\n                            if (parseFloat(x.value) < 25 || parseFloat(x.value) > 60) {\r\n                                x.classList.add('is-invalid')\r\n                            } else {\r\n                                x.classList.remove('is-invalid')\r\n                            }\r\n                        }} />\r\n                        <label className=\"input-group-text\">cm</label>\r\n                    </div>\r\n                );\r\n            case 'soup':\r\n                return (\r\n                    <div className=\"text-center mt-4\">\r\n                        <h2>\r\n                        <label className=\"form-label font-amatic\" htmlFor=\"spiciness\"><b>Spiciness: </b></label>\r\n                        <input className=\"form-range\" type=\"range\" name=\"spiciness\" id=\"spiciness\" defaultValue=\"1\" min=\"1\" max=\"10\" step=\"1\" onChange={el => setStep(el.target.value)} />\r\n                        <label htmlFor=\"spiciness\">{emoji[step - 1]}</label>    \r\n                        </h2>\r\n                    </div>\r\n                );\r\n            case 'sandwich':\r\n                return (\r\n                    <div className=\"input-group mt-2\">\r\n                        <label className=\"input-group-text\" htmlFor=\"bread\">&#127838; Slices of bread: </label>\r\n                        <input className=\"form-control\" type=\"number\" id=\"bread\" min=\"1\" max=\"12\" placeholder=\"Min 1 slice of bread...\" title=\"Min 1 slice, max 12 slices\" onChange={el => {\r\n                            const x = el.target;\r\n                            if (parseInt(x.value) < 1 || parseInt(x.value) > 12) {\r\n                                x.classList.add('is-invalid')\r\n                            } else {\r\n                                x.classList.remove('is-invalid')\r\n                            }\r\n                        }} />\r\n                    </div>\r\n                )\r\n            default:\r\n                return (\r\n                    <div></div>\r\n                )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column align-items-center mt-5 p-5\">\r\n\r\n            <div className=\"input-group\">\r\n                <label htmlFor=\"name\" className=\"input-group-text sm\">&#127836; Dish name: </label>\r\n                <input className=\"form-control\" type=\"text\" id=\"name\" placeholder=\"Dish name\" pattern=\".{6,}\" title=\"At least 6 characters is needed.\" onChange={el => {\r\n                    const x = el.target;\r\n                    if (x.validity.patternMismatch || x.value.length === 0) {\r\n                        x.classList.add('is-invalid')\r\n                    } else {\r\n                        x.classList.remove('is-invalid')\r\n                    }\r\n                }} />\r\n            </div>\r\n            \r\n            <div className=\"input-group mt-2\">\r\n                <label htmlFor=\"prep\" className=\"input-group-text sm\">&#128338; Preparation time: </label>\r\n                <input className=\"form-control\" type=\"time\" defaultValue=\"00:00:00\" id=\"prep\" title=\"Proper preparation time is very important!\" onChange={el => {\r\n                    const x = el.target;\r\n                    if (x.value === '') {\r\n                        x.classList.add('is-invalid');\r\n                    } else {\r\n                        x.classList.remove('is-invalid')\r\n                    }\r\n                }} />\r\n            </div>\r\n\r\n            <select className=\"form-select mt-2\" name=\"type\" id=\"type\" defaultValue=\"info\" \r\n                onChange={e => {\r\n                    dispatch({type:'UPDATE', data: {type: e.target.value}});\r\n                    document.getElementById('btn').classList.remove('disabled')\r\n                }}>\r\n                <option value=\"info\" disabled>Choose type of your dish</option>\r\n                <option value=\"pizza\">Pizza</option>\r\n                <option value=\"soup\">Soup</option>\r\n                <option value=\"sandwich\">Sandwich</option>\r\n            </select>\r\n\r\n            {showProperInputs()}\r\n            \r\n            <button id=\"btn\" className=\"btn btn-primary mt-5 disabled\" onClick={() => postData(validate())}>Submit!</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;","function Loading() {\r\n    return (\r\n        <div id=\"loading\" className=\"font-amatic hidden\">\r\n            <h1>\r\n                Loading...\r\n                <svg id=\"gear\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" fill=\"currentColor\" className=\"bi bi-gear\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z\"/>\r\n                    <path d=\"M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115l.094-.319z\"/>\r\n                </svg>\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","import { useSelector } from 'react-redux';\r\n\r\nfunction Info() {\r\n    const info = useSelector(state => state.info);\r\n\r\n    return (\r\n        <div id=\"info\" className=\"info font-amatic\">\r\n            <h3>\r\n                {info}\r\n            </h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info;","import { combineReducers, createStore } from 'redux';\r\nimport data from './data';\r\nimport info from './info';\r\n\r\nconst connect = combineReducers({\r\n    data,\r\n    info\r\n})\r\n\r\nconst store = createStore(connect);\r\n\r\nexport default store;","export default function data(state = {}, action) {\r\n    switch(action.type) {\r\n        case 'UPDATE':\r\n            return state = action.data;\r\n        default:\r\n            return state;\r\n    }\r\n}","export default function info(state = '', action) {\r\n    switch(action.type) {\r\n        case 'NEW_INFO':\r\n            return state = action.data;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { Provider } from \"react-redux\";\nimport { RecoilRoot } from \"recoil\";\nimport Form from \"./components/Form\";\nimport Loading from './components/Loading';\nimport Info from './components/Info';\nimport store from './store/store';\n\nfunction App() {\n  return (\n      <Provider store={store}>\n        <RecoilRoot>\n          <div className=\"container\">\n            <h1 className=\"font-amatic\">Let's add some new dishes!</h1>\n            <Form />\n            <Loading />\n            <Info />\n          </div>\n        </RecoilRoot>\n      </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/main.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}